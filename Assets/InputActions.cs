//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.12.0
//     from Assets/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/InputActions.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @InputActions: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""26438a66-c17b-459f-a6e6-9d56f663e0f4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""acdb6f17-b476-4e2b-99ca-0afad63388cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""34dc968a-34a6-4eb9-9299-7bbc7cfd8d68"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e67e1695-058f-4085-b3b1-d19ed1e103b1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""c66211ed-b21b-4138-a359-a088d8102cfa"",
            ""actions"": [
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""58c5e482-6fa4-43ab-b82c-2acac7bf0261"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EquipFromInventory"",
                    ""type"": ""Button"",
                    ""id"": ""0195fd15-13e1-4777-86d8-fc1a906abfc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenSkillTab"",
                    ""type"": ""Button"",
                    ""id"": ""09b83697-1f23-43fd-a658-333bce415417"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3f4fd823-c12d-4854-8ce0-38bc9ba22327"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b523f73-28ba-413d-bab9-b8af6f399454"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EquipFromInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6978fdc-75f4-447a-9d06-3b35bc31690a"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenSkillTab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerActions"",
            ""id"": ""c46c935c-70db-4b57-9dc9-1ae64845bdb6"",
            ""actions"": [
                {
                    ""name"": ""ToggleBuildMode"",
                    ""type"": ""Button"",
                    ""id"": ""822c6a8e-6d5c-47cc-8884-4d319bd3eda6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_1"",
                    ""type"": ""Button"",
                    ""id"": ""0bba9bb4-d8e9-4547-b3a9-2c331485b6aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_2"",
                    ""type"": ""Button"",
                    ""id"": ""8ead969e-a561-491d-824e-7730135469e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_3"",
                    ""type"": ""Button"",
                    ""id"": ""063aa72f-8a9b-45da-8238-33f0ce5ba192"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_4"",
                    ""type"": ""Button"",
                    ""id"": ""c74ceca3-8a08-494f-801d-5d1231e5f178"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_5"",
                    ""type"": ""Button"",
                    ""id"": ""4fe48a36-dd22-43a7-bad3-d2c9047e2057"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_6"",
                    ""type"": ""Button"",
                    ""id"": ""d5106d0c-b3c7-43df-9f7f-5921cb761325"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_7"",
                    ""type"": ""Button"",
                    ""id"": ""decdc477-0df9-412a-98ed-df1e39a7f23a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_8"",
                    ""type"": ""Button"",
                    ""id"": ""f5fa5cad-2300-4788-8a7a-005f73c495e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_9"",
                    ""type"": ""Button"",
                    ""id"": ""ba729dea-886d-4b37-adb6-b6d5bfde193d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_10"",
                    ""type"": ""Button"",
                    ""id"": ""f3c5291f-8f2b-4eaa-995d-9fc2ed87fb69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_11"",
                    ""type"": ""Button"",
                    ""id"": ""8dd78a9c-ff0e-465e-9bbb-149320ee4855"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_12"",
                    ""type"": ""Button"",
                    ""id"": ""fd469d3f-3a5f-4f28-be3e-c2cd2d4872b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_13"",
                    ""type"": ""Button"",
                    ""id"": ""164e9d0b-0107-4073-a429-29ae2bb6dc91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_14"",
                    ""type"": ""Button"",
                    ""id"": ""cf3c2a14-9533-4774-9b15-b8ce0dc0ba84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_15"",
                    ""type"": ""Button"",
                    ""id"": ""d6a7d728-8f4a-4bc0-bbb9-e97126b03e12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill_16"",
                    ""type"": ""Button"",
                    ""id"": ""53fac5ee-428c-430b-9a49-2bf5aac8a1d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TownPortal"",
                    ""type"": ""Button"",
                    ""id"": ""b560041a-50a8-42a1-9439-4fbbda6c4750"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""59042ddb-c91f-43f4-966c-e80042532daa"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleBuildMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17667bf5-382a-4019-8638-44ee3087fad9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37d2413b-5703-4874-b536-2c8d695ce34b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45936dd0-7d0e-407b-a310-f5f6d0bb8073"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb5e769c-a729-4b49-9078-f67a1d09d926"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c702d7a-1b4a-4b74-a3ba-04f1f1b968eb"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c876c1c7-ac2f-4acc-8fa2-63ab7845caf1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48b4f8b3-618d-490a-9a14-2230c9119443"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""660b11ef-e8f6-418b-9970-767799284ed8"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""422d6419-0114-4090-9772-f8127ba9431a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cc20f35-3c8b-4e7b-905e-25d5f663825d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72001333-5aa8-4876-9f4a-95e5bedcebb9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""434ab879-a07e-4f30-b5e2-ad4b9245d9f6"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_12"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fb85b27-92b1-4a80-96fe-175caf77e1a5"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_13"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""659d493c-ffc0-409a-8caa-7115587d5304"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_14"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67a1be00-39e2-46c2-8e3b-cc07d6ce56f0"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_15"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d1cf5d7-b9b3-48b5-b9bb-93b579a5d93a"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill_16"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66b8be83-7cb5-49a9-99d5-938c668ae5df"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TownPortal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_Move = m_PlayerMovement.FindAction("Move", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_OpenInventory = m_UI.FindAction("OpenInventory", throwIfNotFound: true);
        m_UI_EquipFromInventory = m_UI.FindAction("EquipFromInventory", throwIfNotFound: true);
        m_UI_OpenSkillTab = m_UI.FindAction("OpenSkillTab", throwIfNotFound: true);
        // PlayerActions
        m_PlayerActions = asset.FindActionMap("PlayerActions", throwIfNotFound: true);
        m_PlayerActions_ToggleBuildMode = m_PlayerActions.FindAction("ToggleBuildMode", throwIfNotFound: true);
        m_PlayerActions_Skill_1 = m_PlayerActions.FindAction("Skill_1", throwIfNotFound: true);
        m_PlayerActions_Skill_2 = m_PlayerActions.FindAction("Skill_2", throwIfNotFound: true);
        m_PlayerActions_Skill_3 = m_PlayerActions.FindAction("Skill_3", throwIfNotFound: true);
        m_PlayerActions_Skill_4 = m_PlayerActions.FindAction("Skill_4", throwIfNotFound: true);
        m_PlayerActions_Skill_5 = m_PlayerActions.FindAction("Skill_5", throwIfNotFound: true);
        m_PlayerActions_Skill_6 = m_PlayerActions.FindAction("Skill_6", throwIfNotFound: true);
        m_PlayerActions_Skill_7 = m_PlayerActions.FindAction("Skill_7", throwIfNotFound: true);
        m_PlayerActions_Skill_8 = m_PlayerActions.FindAction("Skill_8", throwIfNotFound: true);
        m_PlayerActions_Skill_9 = m_PlayerActions.FindAction("Skill_9", throwIfNotFound: true);
        m_PlayerActions_Skill_10 = m_PlayerActions.FindAction("Skill_10", throwIfNotFound: true);
        m_PlayerActions_Skill_11 = m_PlayerActions.FindAction("Skill_11", throwIfNotFound: true);
        m_PlayerActions_Skill_12 = m_PlayerActions.FindAction("Skill_12", throwIfNotFound: true);
        m_PlayerActions_Skill_13 = m_PlayerActions.FindAction("Skill_13", throwIfNotFound: true);
        m_PlayerActions_Skill_14 = m_PlayerActions.FindAction("Skill_14", throwIfNotFound: true);
        m_PlayerActions_Skill_15 = m_PlayerActions.FindAction("Skill_15", throwIfNotFound: true);
        m_PlayerActions_Skill_16 = m_PlayerActions.FindAction("Skill_16", throwIfNotFound: true);
        m_PlayerActions_TownPortal = m_PlayerActions.FindAction("TownPortal", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_PlayerMovement.enabled, "This will cause a leak and performance issues, InputActions.PlayerMovement.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, InputActions.UI.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_PlayerActions.enabled, "This will cause a leak and performance issues, InputActions.PlayerActions.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private List<IPlayerMovementActions> m_PlayerMovementActionsCallbackInterfaces = new List<IPlayerMovementActions>();
    private readonly InputAction m_PlayerMovement_Move;
    /// <summary>
    /// Provides access to input actions defined in input action map "PlayerMovement".
    /// </summary>
    public struct PlayerMovementActions
    {
        private @InputActions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public PlayerMovementActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "PlayerMovement/Move".
        /// </summary>
        public InputAction @Move => m_Wrapper.m_PlayerMovement_Move;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="PlayerMovementActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="PlayerMovementActions" />
        public void AddCallbacks(IPlayerMovementActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="PlayerMovementActions" />
        private void UnregisterCallbacks(IPlayerMovementActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="PlayerMovementActions.UnregisterCallbacks(IPlayerMovementActions)" />.
        /// </summary>
        /// <seealso cref="PlayerMovementActions.UnregisterCallbacks(IPlayerMovementActions)" />
        public void RemoveCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="PlayerMovementActions.AddCallbacks(IPlayerMovementActions)" />
        /// <seealso cref="PlayerMovementActions.RemoveCallbacks(IPlayerMovementActions)" />
        /// <seealso cref="PlayerMovementActions.UnregisterCallbacks(IPlayerMovementActions)" />
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMovementActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMovementActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="PlayerMovementActions" /> instance referencing this action map.
    /// </summary>
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_OpenInventory;
    private readonly InputAction m_UI_EquipFromInventory;
    private readonly InputAction m_UI_OpenSkillTab;
    /// <summary>
    /// Provides access to input actions defined in input action map "UI".
    /// </summary>
    public struct UIActions
    {
        private @InputActions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public UIActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "UI/OpenInventory".
        /// </summary>
        public InputAction @OpenInventory => m_Wrapper.m_UI_OpenInventory;
        /// <summary>
        /// Provides access to the underlying input action "UI/EquipFromInventory".
        /// </summary>
        public InputAction @EquipFromInventory => m_Wrapper.m_UI_EquipFromInventory;
        /// <summary>
        /// Provides access to the underlying input action "UI/OpenSkillTab".
        /// </summary>
        public InputAction @OpenSkillTab => m_Wrapper.m_UI_OpenSkillTab;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="UIActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="UIActions" />
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @OpenInventory.started += instance.OnOpenInventory;
            @OpenInventory.performed += instance.OnOpenInventory;
            @OpenInventory.canceled += instance.OnOpenInventory;
            @EquipFromInventory.started += instance.OnEquipFromInventory;
            @EquipFromInventory.performed += instance.OnEquipFromInventory;
            @EquipFromInventory.canceled += instance.OnEquipFromInventory;
            @OpenSkillTab.started += instance.OnOpenSkillTab;
            @OpenSkillTab.performed += instance.OnOpenSkillTab;
            @OpenSkillTab.canceled += instance.OnOpenSkillTab;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="UIActions" />
        private void UnregisterCallbacks(IUIActions instance)
        {
            @OpenInventory.started -= instance.OnOpenInventory;
            @OpenInventory.performed -= instance.OnOpenInventory;
            @OpenInventory.canceled -= instance.OnOpenInventory;
            @EquipFromInventory.started -= instance.OnEquipFromInventory;
            @EquipFromInventory.performed -= instance.OnEquipFromInventory;
            @EquipFromInventory.canceled -= instance.OnEquipFromInventory;
            @OpenSkillTab.started -= instance.OnOpenSkillTab;
            @OpenSkillTab.performed -= instance.OnOpenSkillTab;
            @OpenSkillTab.canceled -= instance.OnOpenSkillTab;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="UIActions.UnregisterCallbacks(IUIActions)" />.
        /// </summary>
        /// <seealso cref="UIActions.UnregisterCallbacks(IUIActions)" />
        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="UIActions.AddCallbacks(IUIActions)" />
        /// <seealso cref="UIActions.RemoveCallbacks(IUIActions)" />
        /// <seealso cref="UIActions.UnregisterCallbacks(IUIActions)" />
        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="UIActions" /> instance referencing this action map.
    /// </summary>
    public UIActions @UI => new UIActions(this);

    // PlayerActions
    private readonly InputActionMap m_PlayerActions;
    private List<IPlayerActionsActions> m_PlayerActionsActionsCallbackInterfaces = new List<IPlayerActionsActions>();
    private readonly InputAction m_PlayerActions_ToggleBuildMode;
    private readonly InputAction m_PlayerActions_Skill_1;
    private readonly InputAction m_PlayerActions_Skill_2;
    private readonly InputAction m_PlayerActions_Skill_3;
    private readonly InputAction m_PlayerActions_Skill_4;
    private readonly InputAction m_PlayerActions_Skill_5;
    private readonly InputAction m_PlayerActions_Skill_6;
    private readonly InputAction m_PlayerActions_Skill_7;
    private readonly InputAction m_PlayerActions_Skill_8;
    private readonly InputAction m_PlayerActions_Skill_9;
    private readonly InputAction m_PlayerActions_Skill_10;
    private readonly InputAction m_PlayerActions_Skill_11;
    private readonly InputAction m_PlayerActions_Skill_12;
    private readonly InputAction m_PlayerActions_Skill_13;
    private readonly InputAction m_PlayerActions_Skill_14;
    private readonly InputAction m_PlayerActions_Skill_15;
    private readonly InputAction m_PlayerActions_Skill_16;
    private readonly InputAction m_PlayerActions_TownPortal;
    /// <summary>
    /// Provides access to input actions defined in input action map "PlayerActions".
    /// </summary>
    public struct PlayerActionsActions
    {
        private @InputActions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public PlayerActionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/ToggleBuildMode".
        /// </summary>
        public InputAction @ToggleBuildMode => m_Wrapper.m_PlayerActions_ToggleBuildMode;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_1".
        /// </summary>
        public InputAction @Skill_1 => m_Wrapper.m_PlayerActions_Skill_1;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_2".
        /// </summary>
        public InputAction @Skill_2 => m_Wrapper.m_PlayerActions_Skill_2;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_3".
        /// </summary>
        public InputAction @Skill_3 => m_Wrapper.m_PlayerActions_Skill_3;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_4".
        /// </summary>
        public InputAction @Skill_4 => m_Wrapper.m_PlayerActions_Skill_4;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_5".
        /// </summary>
        public InputAction @Skill_5 => m_Wrapper.m_PlayerActions_Skill_5;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_6".
        /// </summary>
        public InputAction @Skill_6 => m_Wrapper.m_PlayerActions_Skill_6;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_7".
        /// </summary>
        public InputAction @Skill_7 => m_Wrapper.m_PlayerActions_Skill_7;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_8".
        /// </summary>
        public InputAction @Skill_8 => m_Wrapper.m_PlayerActions_Skill_8;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_9".
        /// </summary>
        public InputAction @Skill_9 => m_Wrapper.m_PlayerActions_Skill_9;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_10".
        /// </summary>
        public InputAction @Skill_10 => m_Wrapper.m_PlayerActions_Skill_10;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_11".
        /// </summary>
        public InputAction @Skill_11 => m_Wrapper.m_PlayerActions_Skill_11;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_12".
        /// </summary>
        public InputAction @Skill_12 => m_Wrapper.m_PlayerActions_Skill_12;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_13".
        /// </summary>
        public InputAction @Skill_13 => m_Wrapper.m_PlayerActions_Skill_13;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_14".
        /// </summary>
        public InputAction @Skill_14 => m_Wrapper.m_PlayerActions_Skill_14;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_15".
        /// </summary>
        public InputAction @Skill_15 => m_Wrapper.m_PlayerActions_Skill_15;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/Skill_16".
        /// </summary>
        public InputAction @Skill_16 => m_Wrapper.m_PlayerActions_Skill_16;
        /// <summary>
        /// Provides access to the underlying input action "PlayerActions/TownPortal".
        /// </summary>
        public InputAction @TownPortal => m_Wrapper.m_PlayerActions_TownPortal;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="PlayerActionsActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="PlayerActionsActions" />
        public void AddCallbacks(IPlayerActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Add(instance);
            @ToggleBuildMode.started += instance.OnToggleBuildMode;
            @ToggleBuildMode.performed += instance.OnToggleBuildMode;
            @ToggleBuildMode.canceled += instance.OnToggleBuildMode;
            @Skill_1.started += instance.OnSkill_1;
            @Skill_1.performed += instance.OnSkill_1;
            @Skill_1.canceled += instance.OnSkill_1;
            @Skill_2.started += instance.OnSkill_2;
            @Skill_2.performed += instance.OnSkill_2;
            @Skill_2.canceled += instance.OnSkill_2;
            @Skill_3.started += instance.OnSkill_3;
            @Skill_3.performed += instance.OnSkill_3;
            @Skill_3.canceled += instance.OnSkill_3;
            @Skill_4.started += instance.OnSkill_4;
            @Skill_4.performed += instance.OnSkill_4;
            @Skill_4.canceled += instance.OnSkill_4;
            @Skill_5.started += instance.OnSkill_5;
            @Skill_5.performed += instance.OnSkill_5;
            @Skill_5.canceled += instance.OnSkill_5;
            @Skill_6.started += instance.OnSkill_6;
            @Skill_6.performed += instance.OnSkill_6;
            @Skill_6.canceled += instance.OnSkill_6;
            @Skill_7.started += instance.OnSkill_7;
            @Skill_7.performed += instance.OnSkill_7;
            @Skill_7.canceled += instance.OnSkill_7;
            @Skill_8.started += instance.OnSkill_8;
            @Skill_8.performed += instance.OnSkill_8;
            @Skill_8.canceled += instance.OnSkill_8;
            @Skill_9.started += instance.OnSkill_9;
            @Skill_9.performed += instance.OnSkill_9;
            @Skill_9.canceled += instance.OnSkill_9;
            @Skill_10.started += instance.OnSkill_10;
            @Skill_10.performed += instance.OnSkill_10;
            @Skill_10.canceled += instance.OnSkill_10;
            @Skill_11.started += instance.OnSkill_11;
            @Skill_11.performed += instance.OnSkill_11;
            @Skill_11.canceled += instance.OnSkill_11;
            @Skill_12.started += instance.OnSkill_12;
            @Skill_12.performed += instance.OnSkill_12;
            @Skill_12.canceled += instance.OnSkill_12;
            @Skill_13.started += instance.OnSkill_13;
            @Skill_13.performed += instance.OnSkill_13;
            @Skill_13.canceled += instance.OnSkill_13;
            @Skill_14.started += instance.OnSkill_14;
            @Skill_14.performed += instance.OnSkill_14;
            @Skill_14.canceled += instance.OnSkill_14;
            @Skill_15.started += instance.OnSkill_15;
            @Skill_15.performed += instance.OnSkill_15;
            @Skill_15.canceled += instance.OnSkill_15;
            @Skill_16.started += instance.OnSkill_16;
            @Skill_16.performed += instance.OnSkill_16;
            @Skill_16.canceled += instance.OnSkill_16;
            @TownPortal.started += instance.OnTownPortal;
            @TownPortal.performed += instance.OnTownPortal;
            @TownPortal.canceled += instance.OnTownPortal;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="PlayerActionsActions" />
        private void UnregisterCallbacks(IPlayerActionsActions instance)
        {
            @ToggleBuildMode.started -= instance.OnToggleBuildMode;
            @ToggleBuildMode.performed -= instance.OnToggleBuildMode;
            @ToggleBuildMode.canceled -= instance.OnToggleBuildMode;
            @Skill_1.started -= instance.OnSkill_1;
            @Skill_1.performed -= instance.OnSkill_1;
            @Skill_1.canceled -= instance.OnSkill_1;
            @Skill_2.started -= instance.OnSkill_2;
            @Skill_2.performed -= instance.OnSkill_2;
            @Skill_2.canceled -= instance.OnSkill_2;
            @Skill_3.started -= instance.OnSkill_3;
            @Skill_3.performed -= instance.OnSkill_3;
            @Skill_3.canceled -= instance.OnSkill_3;
            @Skill_4.started -= instance.OnSkill_4;
            @Skill_4.performed -= instance.OnSkill_4;
            @Skill_4.canceled -= instance.OnSkill_4;
            @Skill_5.started -= instance.OnSkill_5;
            @Skill_5.performed -= instance.OnSkill_5;
            @Skill_5.canceled -= instance.OnSkill_5;
            @Skill_6.started -= instance.OnSkill_6;
            @Skill_6.performed -= instance.OnSkill_6;
            @Skill_6.canceled -= instance.OnSkill_6;
            @Skill_7.started -= instance.OnSkill_7;
            @Skill_7.performed -= instance.OnSkill_7;
            @Skill_7.canceled -= instance.OnSkill_7;
            @Skill_8.started -= instance.OnSkill_8;
            @Skill_8.performed -= instance.OnSkill_8;
            @Skill_8.canceled -= instance.OnSkill_8;
            @Skill_9.started -= instance.OnSkill_9;
            @Skill_9.performed -= instance.OnSkill_9;
            @Skill_9.canceled -= instance.OnSkill_9;
            @Skill_10.started -= instance.OnSkill_10;
            @Skill_10.performed -= instance.OnSkill_10;
            @Skill_10.canceled -= instance.OnSkill_10;
            @Skill_11.started -= instance.OnSkill_11;
            @Skill_11.performed -= instance.OnSkill_11;
            @Skill_11.canceled -= instance.OnSkill_11;
            @Skill_12.started -= instance.OnSkill_12;
            @Skill_12.performed -= instance.OnSkill_12;
            @Skill_12.canceled -= instance.OnSkill_12;
            @Skill_13.started -= instance.OnSkill_13;
            @Skill_13.performed -= instance.OnSkill_13;
            @Skill_13.canceled -= instance.OnSkill_13;
            @Skill_14.started -= instance.OnSkill_14;
            @Skill_14.performed -= instance.OnSkill_14;
            @Skill_14.canceled -= instance.OnSkill_14;
            @Skill_15.started -= instance.OnSkill_15;
            @Skill_15.performed -= instance.OnSkill_15;
            @Skill_15.canceled -= instance.OnSkill_15;
            @Skill_16.started -= instance.OnSkill_16;
            @Skill_16.performed -= instance.OnSkill_16;
            @Skill_16.canceled -= instance.OnSkill_16;
            @TownPortal.started -= instance.OnTownPortal;
            @TownPortal.performed -= instance.OnTownPortal;
            @TownPortal.canceled -= instance.OnTownPortal;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="PlayerActionsActions.UnregisterCallbacks(IPlayerActionsActions)" />.
        /// </summary>
        /// <seealso cref="PlayerActionsActions.UnregisterCallbacks(IPlayerActionsActions)" />
        public void RemoveCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="PlayerActionsActions.AddCallbacks(IPlayerActionsActions)" />
        /// <seealso cref="PlayerActionsActions.RemoveCallbacks(IPlayerActionsActions)" />
        /// <seealso cref="PlayerActionsActions.UnregisterCallbacks(IPlayerActionsActions)" />
        public void SetCallbacks(IPlayerActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="PlayerActionsActions" /> instance referencing this action map.
    /// </summary>
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "PlayerMovement" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="PlayerMovementActions.AddCallbacks(IPlayerMovementActions)" />
    /// <seealso cref="PlayerMovementActions.RemoveCallbacks(IPlayerMovementActions)" />
    public interface IPlayerMovementActions
    {
        /// <summary>
        /// Method invoked when associated input action "Move" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMove(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "UI" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="UIActions.AddCallbacks(IUIActions)" />
    /// <seealso cref="UIActions.RemoveCallbacks(IUIActions)" />
    public interface IUIActions
    {
        /// <summary>
        /// Method invoked when associated input action "OpenInventory" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOpenInventory(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "EquipFromInventory" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnEquipFromInventory(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "OpenSkillTab" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOpenSkillTab(InputAction.CallbackContext context);
    }
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "PlayerActions" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="PlayerActionsActions.AddCallbacks(IPlayerActionsActions)" />
    /// <seealso cref="PlayerActionsActions.RemoveCallbacks(IPlayerActionsActions)" />
    public interface IPlayerActionsActions
    {
        /// <summary>
        /// Method invoked when associated input action "ToggleBuildMode" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleBuildMode(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_1" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_1(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_2" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_2(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_3" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_3(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_4" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_4(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_5" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_5(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_6" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_6(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_7" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_7(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_8" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_8(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_9" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_9(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_10" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_10(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_11" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_11(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_12" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_12(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_13" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_13(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_14" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_14(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_15" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_15(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Skill_16" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSkill_16(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "TownPortal" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnTownPortal(InputAction.CallbackContext context);
    }
}
